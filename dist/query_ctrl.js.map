{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","GenericDatasourceQueryCtrl","$scope","$injector","target","ycol","type","panel","logsPerPage","currentPage","getHistograms","query","datasource","replaceQueryParameters","to","templateSrv","timeRange","unix","from","data","id","backendSrv","datasourceRequest","url","method","then","res","logEntries","results","A","meta","count","totalPages","Math","ceil","refresh","queryChanged","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,qB,kBAAAA,S;;;;;;;;;;;;;;;;;;;;;kDAEIC,0B;;;AACT;AACA,oDAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAAA,wKACrBD,MADqB,EACbC,SADa;;AAE3B,0BAAKC,MAAL,CAAYA,MAAZ,GAAqB,MAAKA,MAAL,CAAYC,IAAjC;AACA,0BAAKD,MAAL,CAAYE,IAAZ,GAAmB,MAAKC,KAAL,CAAWD,IAAX,IAAmB,WAAtC;AACA,0BAAKF,MAAL,CAAYI,WAAZ,GAA0B,GAA1B;AACA,0BAAKJ,MAAL,CAAYK,WAAZ,GAA0B,CAA1B;AACA,0BAAKC,aAAL;AAN2B;AAO9B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;oDACgB;AAAA;;AACZ,4BAAMC,QAAQ,KAAKC,UAAL,CAAgBC,sBAAhB,CAAuC,KAAKT,MAA5C,EAAoD,EAAE,cAAc,EAAhB,EAApD,CAAd;AACA,4BAAMU,KAAK,KAAKF,UAAL,CAAgBG,WAAhB,CAA4BC,SAA5B,CAAsCF,EAAtC,CAAyCG,IAAzC,KAAkD,IAA7D;AACA,4BAAMC,OAAO,KAAKN,UAAL,CAAgBG,WAAhB,CAA4BC,SAA5B,CAAsCE,IAAtC,CAA2CD,IAA3C,KAAoD,IAAjE;AACA,4BAAME,OAAO,iGACP,KAAKP,UAAL,CAAgBQ,EADT,GACc,YADd,GAC6BT,KAD7B,GACqC,kCADrC,GAC0EO,IAD1E,GACiF,UADjF,GAC8FJ,EAD9F,GACmG,IADhH;AAEA,6BAAKF,UAAL,CAAgBS,UAAhB,CAA2BC,iBAA3B,CAA6C;AACzCC,iCAAK,iBADoC;AAEzCC,oCAAQ,MAFiC;AAGzCL,kCAAMA;AAHmC,yBAA7C,EAIGM,IAJH,CAIQ,UAACC,GAAD,EAAS;AACb,mCAAKtB,MAAL,CAAYuB,UAAZ,GAAyBD,IAAIP,IAAJ,CAASS,OAAT,CAAiBC,CAAjB,CAAmBC,IAAnB,CAAwBC,KAAjD;AACA,mCAAK3B,MAAL,CAAY4B,UAAZ,GAAyBC,KAAKC,IAAL,CAAU,OAAK9B,MAAL,CAAYuB,UAAZ,GAAyB,OAAKvB,MAAL,CAAYI,WAA/C,CAAzB;AACH,yBAPD;AAQH;;;mDACc;AACX,6BAAKE,aAAL;AACA,6BAAKyB,OAAL;AACH;;;mDACc;AACX,4BAAI,KAAK/B,MAAL,CAAYK,WAAZ,GAA0B,CAA9B,EAAiC;AAC7B,iCAAKL,MAAL,CAAYK,WAAZ,GAA0B,KAAKL,MAAL,CAAYK,WAAZ,GAA0B,CAApD;AACA,iCAAK2B,YAAL;AACH;AACJ;;;+CACU;AACP,4BAAI,KAAKhC,MAAL,CAAYK,WAAZ,GAA0B,KAAKL,MAAL,CAAY4B,UAA1C,EAAsD;AAClD,iCAAK5B,MAAL,CAAYK,WAAZ,GAA0B,KAAKL,MAAL,CAAYK,WAAZ,GAA0B,CAApD;AACA,iCAAK2B,YAAL;AACH;AACJ;;;+CACU;AACP,6BAAKhC,MAAL,CAAYK,WAAZ,GAA0B,CAA1B;AACA,6BAAK2B,YAAL;AACH;;;;cAvD2CpC,S;;;;AAyDhDC,uCAA2BoC,WAA3B,GAAyC,4BAAzC;AACA","file":"query_ctrl.js","sourcesContent":["import { QueryCtrl } from 'app/plugins/sdk';\nimport './css/query-editor.css!';\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n    /** @ngInject */\n    constructor($scope, $injector) {\n        super($scope, $injector);\n        this.target.target = this.target.ycol;\n        this.target.type = this.panel.type || 'timeserie';\n        this.target.logsPerPage = 100;\n        this.target.currentPage = 1;\n        this.getHistograms();\n    }\n    // getOptions(query) {\n    //   return this.datasource.metricFindQuery(query || '');\n    // }\n    //\n    // toggleEditorMode() {\n    //   this.target.rawQuery = !this.target.rawQuery;\n    // }\n    //\n    // onChangeInternal() {\n    //   this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    // }\n    getHistograms() {\n        const query = this.datasource.replaceQueryParameters(this.target, { \"scopedVars\": \"\" });\n        const to = this.datasource.templateSrv.timeRange.to.unix() * 1000;\n        const from = this.datasource.templateSrv.timeRange.from.unix() * 1000;\n        const data = '{\"queries\":[{\"queryType\":\"query\",\"target\":\"\",\"refId\":\"A\",\"type\":\"histograms\",\"datasourceId\":'\n            + this.datasource.id + ',\"query\":\"' + query + '\",\"xcol\":\"\",\"ycol\":\"\"}],\"from\":\"' + from + '\",\"to\":\"' + to + '\"}';\n        this.datasource.backendSrv.datasourceRequest({\n            url: '/api/tsdb/query',\n            method: 'POST',\n            data: data\n        }).then((res) => {\n            this.target.logEntries = res.data.results.A.meta.count;\n            this.target.totalPages = Math.ceil(this.target.logEntries / this.target.logsPerPage);\n        });\n    }\n    queryChanged() {\n        this.getHistograms();\n        this.refresh();\n    }\n    previousPage() {\n        if (this.target.currentPage > 1) {\n            this.target.currentPage = this.target.currentPage - 1;\n            this.queryChanged();\n        }\n    }\n    nextPage() {\n        if (this.target.currentPage < this.target.totalPages) {\n            this.target.currentPage = this.target.currentPage + 1;\n            this.queryChanged();\n        }\n    }\n    goToPage() {\n        this.target.currentPage = 1;\n        this.queryChanged();\n    }\n}\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n//# sourceMappingURL=query_ctrl.js.map"]}